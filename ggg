local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Xero Hub" .. Fluent.Version,
    SubTitle = "by @wockyrituals",
    TabWidth = 195,
    Size = UDim2.fromOffset(525, 325),
    Acrylic = true,
    Theme = "Aqua",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Xero Reborn V2", Icon = "crosshair" }),
    V1 = Window:AddTab({ Title = "Execute V1", Icon = "unlock" }),
    V3 = Window:AddTab({ Title = "Execute V3", Icon = "lock" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

Tabs.Main:AddParagraph({
    Title = "G U A R D I N G",
    Content = ""
})

local AutoGuardToggle = Tabs.Main:AddToggle("AutoGuard", { Title = "Autoguard", Default = false })

local Dropdown = Tabs.Main:AddDropdown("Dropdown", {
    Title = "Guard Type",
    Values = { "realistic", "demon lock", "gaurd like a mamba", "gaurd like a hof" },
    Multi = false,
    Default = 1,
})

Dropdown:SetValue("four")

Dropdown:OnChanged(function(Value)
    print("Dropdown changed:", Value)
end)

Tabs.Main:AddParagraph({
    Title = "D U N K   S P A M",
    Content = ""
})

local AutoDunkToggle = Tabs.Main:AddToggle("AutoDunk", { Title = "Auto-Dunk", Default = false })

AutoDunkToggle:OnChanged(function()
    print("Auto-Dunk Toggle changed:", AutoDunkToggle.Value)
end)

local DunkTypeDropdown = Tabs.Main:AddDropdown("DunkType", {
    Title = "Dunk Type",
    Values = { "fly to rim", "teleport to rim", "lag to rim", "auto-speed to rim" },
    Multi = false,
    Default = 2,
})

DunkTypeDropdown:SetValue("fly to rim")

DunkTypeDropdown:OnChanged(function(Value)
    print("Dunk Type Dropdown changed:", Value)
end)

local DunkType2Dropdown = Tabs.Main:AddDropdown("DunkType2", {
    Title = "Dunk Type 2",
    Values = { "till match end", "till 18 points" },
    Multi = false,
    Default = 1,
})

DunkType2Dropdown:SetValue("till match end")

DunkType2Dropdown:OnChanged(function(Value)
    print("Dunk Type 2 Dropdown changed:", Value)
end)

Tabs.Main:AddParagraph({
    Title = "T R O L L",
    Content = ""
})

local PlayerToTrollInput = Tabs.Main:AddInput("PlayerToTroll", {
    Title = "Player To Troll",
    Default = "",
    Placeholder = "Username",
    Numeric = false,
    Callback = function(Value)
        print("Player to troll changed:", Value)
    end
})

Tabs.Main:AddButton({
    Title = "Fling",
    Description = "Fling a player",
    Callback = function()
        Window:Dialog({
            Title = "Fling This Player?",
            Content = "Do you want to fling this player?",
            Buttons = {
                {
                    Title = "✅️",
                    Callback = function()
                        print("Confirmed fling action.")
                    end
                },
                {
                    Title = "❎️",
                    Callback = function()
                        print("Cancelled fling action.")
                    end
                }
            }
        })
    end
})

Tabs.Main:AddButton({
    Title = "Freeze",
    Description = "Freeze a player",
    Callback = function()
        Window:Dialog({
            Title = "Freeze This Player?",
            Content = "Do you want to freeze this player?",
            Buttons = {
                {
                    Title = "✅️",
                    Callback = function()
                        print("Confirmed freeze action.")
                    end
                },
                {
                    Title = "❎️",
                    Callback = function()
                        print("Cancelled freeze action.")
                    end
                }
            }
        })
    end
})

Tabs.V1:AddButton({
    Title = "Execute V1",
    Description = "Free Version",
    Callback = function()
        Window:Dialog({
            Title = "Execute V1?",
            Content = "",
            Buttons = {
                {
                    Title = "✅️",
                    Callback = function()
                        loadstring(game:HttpGet('https://raw.githubusercontent.com/XeroReborn/XR-Hub/refs/heads/main/Hoopz'))()
                        print("Confirmed the dialog.")
                    end
                },
                {
                    Title = "❎️",
                    Callback = function()
                        print("Cancelled the dialog.")
                    end
                }
            }
        })
    end
})

Tabs.V3:AddButton({
    Title = "Execute V3",
    Description = "Expensive Version",
    Callback = function()
        Window:Dialog({
            Title = "Execute V3?",
            Content = "",
            Buttons = {
                {
                    Title = "✅️",
                    Callback = function()
                        loadstring(game:HttpGet("https://raw.githubusercontent.com/XeroReborn/SaintfulSinners/refs/heads/main/MM2ScriptV4"))()
                        print("Confirmed the dialog.")
                    end
                },
                {
                    Title = "❎️",
                    Callback = function()
                        print("Cancelled the dialog.")
                    end
                }
            }
        })
    end
})

-- Addons for saving and interface management
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)

Fluent:Notify({
    Title = "Xero",
    Content = "The script has been loaded.",
    Duration = 5
})

SaveManager:LoadAutoloadConfig()
